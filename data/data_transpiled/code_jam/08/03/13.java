@ Internal public static double [ ] [ ] pillarArea ( double radius , double from , double to ) {
  /* Compute area */
  double area [ ] [ ] = 0.0 ;
  double startRad = asin ( from / radius ) ;
  double endRad = asin ( to / radius ) ;
  area [ 0 ] [ 0 ] = ( endRad + sin ( endRad * 2 ) / 2 ) ;
  double state , val ;
  area [ 0 ] [ 1 ] = 0.0 ;
  area [ 0 ] [ 2 ] = 0.0 ;
  area [ 0 ] [ 3 ] = 0.0 ;
  area [ 0 ] [ 4 ] = 0.0 ;
  area [ 0 ] [ 5 ] = 0.0 ;
  area [ 0 ] [ 6 ] = 0.0 ;
  area [ 0 ] [ 7 ] = 0.0 ;
  area [ 0 ] [ 8 ] = 0.0 ;
  area [ 0 ] [ 9 ] = 0.0 ;
  area [ 0 ] [ 10 ] = 0.0 ;
  area [ 0 ] [ 11 ] = 0.0 ;
  area [ 0 ] [ 12 ] = 0.0 ;
  area [ 0 ] [ 13 ] = 0.0 ;
  area [ 0 ] [ 14 ] = 0.0 ;
  area [ 0 ] [ 15 ] = 0.0 ;
  area [ 0 ] [ 16 ] = 0.0 ;
  area [ 0 ] [ 17 ] = 0.0 ;
  area [ 0 ] [ 18 ] = 0.0 ;
  area [ 0 ] [ 19 ] = 0.0 ;
  area [ 0 ] [ 19 ] = 0.0 ;
  area [ 0 ] [ 20 ] = 0.0 ;
  area [ 0 ] [ 21 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  area [ 0 ] [ 22 ] = 0.0 ;
  