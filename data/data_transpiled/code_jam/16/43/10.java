) ")publicstaticStringprint(){" Tianren ▁ Liu ");finalintT=Integer.parseInt(System.console().readLine());for(intt=0;t<T;t++){System.out.println(" Case ▁ # "+(t+1)+" : ");intR=Integer.parseInt(System.console().readLine());intC=Integer.parseInt(System.console().readLine());intN=2*(R+C);int[]L=newint[R];for(inti=0;i<R;i++){L[i]=Integer.parseInt(System.console().readLine());}Arrays.sort(L,newComparator<Integer>(){publicintcompare(Integero1,Integero2){return(o1-o2)%N<(o1-o2)%N?-1:1;}});booleanimpossible=false;for(inta=0;a<R;a++){intb=L[a];for(intc=0;c<R;c++){if(a!=c){if((c-a)%N<(b-a)%N<(d-a)%N||(c-a)%N>(b-a)%N>(d-a)%N){impossible=true;}}}}if(impossible){System.out.println(" IMPOSSIBLE " ) ; continue ; } List < List < Character >> maze = new ArrayList < > ( R ) ; for ( int i = 0 ; i < R ; i ++ ) { maze . add ( Collections . singletonList ( ' ? ' ) ) ; } for ( int s = 0 ; s < L . length ; s ++ ) { int t = L [ s ] ; int y ; int x = 0 ; if ( s <= C ) { y = 0 ; x = s - 1 ; d = ' v ' ; } else if ( s <= C + R ) { y = s - C - 1 ; x = C - 1 ; d = ' < ' ; } else if ( s <= C + R + C ) { y = R - 1 ; x =