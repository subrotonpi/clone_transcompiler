) ",garbageValue=" Tianren ‚ñÅ Liu " ) public static double solve ( int Choose , int Target , float [ ] p , float [ ] dis ) { final int N = Integer . parseInt ( System . console ( ) . readLine ( ) ) ; final int K = Integer . parseInt ( System . console ( ) . readLine ( ) ) ; if ( dis . length - 1 + Choose < Target ) return 0d ; if ( Choose == 0 ) return dis [ Target ] ; if ( Choose > p . length ) return 0 ; float [ ] ndis = new float [ dis . length + 1 ] ; System . arraycopy ( dis , 0 , ndis , 0 , dis . length ) ; System . arraycopy ( p , 0 , ndis , 1 , p . length ) ; ndis [ 0 ] += dis [ p . length ] * ( 1 - p [ p . length ] ) ; ndis [ 1 ] += dis [ p . length ] * p [ p . length ] ; int res = Math . max ( solve ( Choose - 1 , Target , p , 1 , ndis ) , solve ( Choose , Target , p , 1 , dis ) ) ; return res ; }