) " ) public static Iterable < Integer > solve ( final int W , final int H ) { final int n = m + 2 ; final int s = m ; final int t = m + 1 ; final Graph g = new Graph ( n ) ; g . addEdge ( s , t , W ) ; for ( int i = 0 ; i < m ; i ++ ) { g . addEdge ( s , i , min ( B [ i ] . x0 , B [ i ] . x1 ) ) ; g . addEdge ( i , t , W - B [ i ] . x0 , B [ i ] . x1 , B [ i ] . y1 ) ; g . addEdge ( i , j , v ) ; } final int ans = g . minDist ( s , t ) ; return ans ; }