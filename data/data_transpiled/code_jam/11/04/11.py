def SPACETOKEN D SPACETOKEN = SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN open SPACETOKEN import SPACETOKEN read STRNEWLINE SPACETOKEN >> > SPACETOKEN from SPACETOKEN open SPACETOKEN import SPACETOKEN read STRNEWLINE SPACETOKEN >> > SPACETOKEN read SPACETOKEN = SPACETOKEN read ( ) STRNEWLINE SPACETOKEN >> > SPACETOKEN print ( read ( ) ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN >> > SPACETOKEN GoroSort ( ) STRNEWLINE SPACETOKEN [ ] STRNEWLINE SPACETOKEN """
class GoroSort ( object ) :
    def __init__ ( self ) :
        f = open ( ' src / D / D - large.in ' , ' r' )
        s = f.readline ( )
        t = int ( s )
        f.write ( ' src / D / output.txt ' )
        for i in range ( t ) :
            s = f.readline ( )
            n = int ( s )
            a = [ ]
            s = f.readline ( )
            ss = s.split ( ' s + ' )
            for j in range ( n ) :
                a.append ( int ( ss [ j