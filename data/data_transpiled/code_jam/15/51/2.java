) ",desc=" Tianren ▁ Liu " ) ) public static int [ ] solve ( int D , int ms , int [ ] w ) { final int [ ] wp = new int [ N ] ; int nz = 0 ; for ( int i = 1 ; i < w . length ; i ++ ) { int lb = w [ i ] ; int n = w [ i ] ; if ( lb <= ms - D ) nz = n ; else if ( lb <= ms ) wp [ i ] = new Integer ( lb ) ; else break ; } w = new int [ w . length ] ; w [ 0 ] = new Integer ( ms - D ) ; w [ w . length - 1 ] = nz ; final int [ ] wd = new int [ w . length - 1 ] ; int ncur = nz ; for ( int i = 1 ; i < w . length ; i ++ ) { int lb = w [ i ] ; int n = w [ i ] ; wd [ i - 1 ] = new Integer ( lb ) ; ncur = n ; } return new int [ ] { nz , wd [ 0 ] }; }