@ VisibleForTesting static final Comparator < Result > COMPARATOR = new Comparator < Result > ( ) {
  @ Override public int compare ( Result o1 , Result o2 ) {
    final int [ ] s1 = o1 . getSecond ( ) . split ( " " ) ;
    final int [ ] s2 = o2 . getSecond ( ) . split ( " " ) ;
    final int [ ] s2 = s2 . clone ( ) ;
    final int [ ] s3 = s1 . clone ( ) ;
    final int [ ] s3 = s2 . clone ( ) ;
    final int [ ] s3 = s2 . clone ( ) ;
    final int [ ] s3 = s3 . clone ( ) ;
    final boolean mt = s3 . length > 10000 ;
    final int [ ] s3 = s3 . clone ( ) ;
    final int [ ] s3 = s3 . clone ( ) ;
    final int [ ] s3 = s3 . clone ( ) ;
    final int [ ] s3 = s3 . clone ( ) ;
    final int [ ] s3 = s3 . clone ( ) ;
    s3 [ 0 ] = s3 [ 0 ] ;
    s3 [ 1 ] = s3 [ 1 ] ;
    s3 [ 2 ] = s3 [ 2 ] ;
    s3 [ 3 ] = s3 [ 3 ] ;
    s3 [ 4 ] = s3 [ 4 ] ;
    s3 [ 5 ] = s3 [ 5 ] ;
    s3 [ 6 ] = s3 [ 6 ] ;
    s3 [ 7 ] = s3 [ 7 ] ;
    s3 [ 8 ] = s3 [ 8 ] ;
    s3 [ 9 ] = s3 [ 9 ] ;
    s3 [ 10 ] = s3 [ 10 ] ;
    s3 [ 11 ] = s3 [ 11 ] ;
    s3 [ 12 ] = s3 [ 12 ] ;
    s3 [ 13 ] = s3 [ 13 ] ;
    s3 [ 14 ] = s3 [ 14 ] ;
    s3 [ 15 ] = s3 [ 15 ] ;
    s3 [ 15 ] = s3 [ 16 ] ;
    s3 [ 16 ] = s3 [ 17 ] ;
    s3 [ 17 ] = s3 [ 18 ] ;
    s3 [ 18 ] = s3 [ 19 ] ;
    s3 [ 19 ] = s3 [ 19 ] ;
    s3 [ 20 ] = s3 [ 20 ] ;
    s3 [ 21 ] = s3 [ 21 ] ;
    s3 [ 22 ] = s3 [ 22 ] ;
    s3 [ 23 ] = s3 [ 24 ] ;
    s3 [ 24 ] = s3 [ 25 ] ;
    s3 [ 25 ] = s3 [ 26 ] ;
    s3 [ 26 ] = s3 [ 27 ] ;
    s3 [ 27 ] = s3 [ 28 ] ;
    s3 [ 28 ] = s3 [ 28 ] ;
    s3 [ 29 ] = s3 ;
    s3