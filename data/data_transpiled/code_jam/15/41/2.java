) " ) public static void main ( String [ ] args ) { final Scanner scanner = new Scanner ( System . in ) ; if ( args . length == 0 ) { final int T = Integer . parseInt ( scanner . nextLine ( ) ) ; for ( int t : xrange ( T ) ) { final int R = Integer . parseInt ( scanner . nextLine ( ) ) ; final int C = Integer . parseInt ( scanner . nextLine ( ) ) ; final String [ ] street = new String [ R ] ; for ( int i = 0 ; i < R ; i ++ ) street [ i ] = scanner . nextLine ( ) ; final Set < Point > lbound = new HashSet < Point > ( ) , rbound = new HashSet < Point > ( ) , ubound = new HashSet < Point > ( ) , bbound = new HashSet < Point > ( ) ; int counter = 0 ; for ( int r = 0 ; r < R ; r ++ ) { for ( int c = 0 ; c < C ; c ++ ) { if ( street [ r ] . charAt ( c ) != ' . ' ) { if ( street [ r ] . charAt ( c ) == ' < ' ) counter = counter + 1 ; lbound . add ( new Point ( r , c ) ) ; break ; } } for ( int c = C - 1 ; c >= 0 ; c -- ) { if ( street [ r ] . charAt ( c ) != ' . ' ) { if ( street [ r ] . charAt ( c ) == ' > ' ) counter = counter + 1 ; rbound . add ( new Point ( r , c ) ) ; break ; } } } for ( int c = 0 ; c < C ; c ++ ) { for ( int r = 0 ; r < R ; r ++ ) { if ( street [ r ] . charAt ( c ) != ' . ' ) { if ( street [ r ] . charAt ( c ) == ' ^ ' ) counter = counter + 1 ; ubound . add ( new Point ( r , c ) ) ; break ; } } for ( int r = R - 1 ; r >= 0 ; r -- ) { if ( street [ r ] . charAt ( c ) != ' . ' ) { if ( street [ r ] . charAt ( c ) == ' v ' ) counter = counter + 1 ; bbound . add ( new Point ( r , c ) ) ; break ; } } } System . out .