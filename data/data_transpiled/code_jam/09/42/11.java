static final Scanner getScanner ( ) {
  final Scanner scanner = new Scanner ( System . in ) ;
  final int [ ] freeMove = scanner . nextInt ( ) ;
  if ( scanner . nextInt ( ) != 2 ) {
    System . out . println ( "specify input file" ) ;
    exit ( ) ;
  }
  final long startTime = System . nanoTime ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  scanner . nextLine ( ) ;
  return scanner ;
}
