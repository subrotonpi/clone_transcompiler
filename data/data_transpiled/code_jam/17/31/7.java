static final Function < List < List < Integer >> , Double > FUNCTION = new Function < List < List < Integer >> , Double > ( ) {
  @ Override public Double apply ( List < List < Integer >> pancakes , int k ) {
    return Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI * Math . PI ;
    