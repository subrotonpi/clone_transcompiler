@ GwtIncompatible ( "java.util.concurrent.atomic.AtomicReference" ) public static < T > void main ( final String [ ] args ) throws IOException {
  final BufferedReader stdin = new BufferedReader ( new InputStreamReader ( System . in ) ) ;
  final int n ;
  final int i ;
  final int s ;
  final int t ;
  final List < T > list ;
  final int [ ] ints ;
  final int i ;
  final int i ;
  final int s ;
  final int i ;
  final int j ;
  final int l ;
  final int l ;
  final int l ;
  final int m ;
  final int n ;
  final int m ;
  final int i ;
  final int m ;
  final int n ;
  final int m ;
  final int m ;
  final int k ;
  final int l ;
  final int m ;
  final int m ;
  switch ( i ) {
    case 0 : m = Integer . parseInt ( stdin . readLine ( ) ) ;
    break ;
    case 1 : m = Integer . parseInt ( stdin . readLine ( ) ) ;
    l = m ;
    m = m ;
    break ;
    case 2 : m = Integer . parseInt ( stdin . readLine ( ) ) ;
    l = m ;
    m = m ;
    break ;
    case 3 : m = Integer . parseInt ( stdin . readLine ( ) ) ;
    l = m ;
    m = m ;
    break ;
    case 4 : m = Integer . parseInt ( stdin . readLine ( ) ) ;
    l = m ;
    m = m ;
    break ;
    case 5 : m = Integer . parseInt ( stdin . readLine ( ) ) ;
    l = m ;
    m = m ;
    break ;
    case 6 : m = Integer . parseInt ( stdin . readLine ( ) ) ;
    l = m ;
    m = m ;
    break ;
    case 7 : m = Integer . parseInt ( stdin . readLine ( ) ) ;
    l = m ;
    m = m ;
    break ;
    case 8 : m = Integer . parseInt ( stdin . readLine ( ) ) ;
    l = m ;
    m = m ;
    break ;
    case 9 : m = Integer . parseInt ( stdin . readLine ( ) ) ;
    l = m ;
    m = m ;
    break ;
    case 10 : m = Integer . parseInt ( stdin . readLine ( ) ) ;
    l = m ;
    m = m ;
    break ;
    case 11 : m = Integer . parseInt ( stdin . readLine ( ) ) ;
    l = m ;
    m = m ;
    break ;
    case 12 : m = Integer . parseInt ( stdin . readLine ( ) ) ;
    l = m ;
    m = m ;
    break ;
    default : break ;
  }
}
