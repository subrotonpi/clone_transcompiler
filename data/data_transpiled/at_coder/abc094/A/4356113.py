def test_solve_a ( ) :
    from sympy.utilities.iterables import solve_a
    class A ( object ) :
        def __init__ ( self ) :
            self.solved_a = solve_a ( )
        def solved_b ( self ) :
            self.solved_b = solve_b ( )
            self.solved_x = solve_x ( )
            if self.solved_x - self.solved_a <= self.solved_b :
                self.solved_x = self.solved_x - self.solved_a
            else :
                self.solved_x = self.solved_x
    A = A ( )
    B = B ( )
    C = C ( )
    D = D ( )
    print ( A ( ) )
    print ( B ( ) )
    print ( C ( ) )
    print ( D ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( B ( ) )
    print ( A ( ) )
    print ( B ( ) )
    print ( C ( ) )
    print ( D ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( B ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( B ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( B ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( A ( ) )
    print ( )
    print ( A ( ) )
    print ( )
    print ( A ( ) )
    print ( )
    print ( )
    print ( )
    print ( )
